layout user_label

code metapost

	vardef max_label_level (expr mylevel)=
		maxl := scantokens(mylevel);
	enddef;
    
	
  	def p_u_label_MY (expr P,R,S,A)=
  		T:=identity shifted P;
    	U:=(0,0);
    	save lvl;
    	save style;
    	if known ATTR_style:
    		style:= scantokens(ATTR_style);
    	else:
    		style :=0;
    	fi;
    	if known ATTR_text:
    		 if known ATTR_lvl:
    		 lvl := scantokens(ATTR_lvl);
    		 else: lvl :=0;
    		 fi;
    		 if lvl < maxl+1:
      			U:=(S*u*(length ATTR_text)/4,S*u*(length ATTR_text)/4);
      			create_styled_label(ATTR_text,P,R,S,A,style);
      		else:;
    		fi;
    	fi;
  	enddef;
		initsymbol("p_u_label_MY");

		code metapost

		% https://www.mail-archive.com/therion@speleo.sk/msg07234.html
        % define a custom attribute called label_mode

	vardef create_styled_label (expr plaintext,P,R,S,A,defaultstyle)=
    save textsize, style, thetext;
    string textsize;
    if S = 0.5:
      textsize:="\thtinysize";
    elseif S = 0.7:
      textsize:="\thsmallsize";
    elseif S = 1.4:
      textsize:="\thlargesize";
    elseif S = 2:
      textsize:="\thhugesize";
    else: % normal is 1
      textsize:="\thnormalsize";
    fi;
    if known ATTR_labelstyle:
      style:=scantokens(ATTR_labelstyle);
    else:
      style:=defaultstyle;
    fi;
    picture thetext;
    thetext:=thTEX("\thframed {" & textsize & " " & plaintext & "}");
    if A = (-1,1):
      p_label.ulft(thetext,P,R,style);
    elseif A = (0,1):
      p_label.top(thetext,P,R,style);
    elseif A = (1,1):
      p_label.urt(thetext,P,R,style);
    elseif A = (-1,0):
      p_label.lft(thetext,P,R,style);
    elseif A = (1,0):
      p_label.rt(thetext,P,R,style);
    elseif A = (-1,-1):
      p_label.llft(thetext,P,R,style);
    elseif A = (0,-1):
      p_label.bot(thetext,P,R,style);
    elseif A = (1,-1):
      p_label.lrt(thetext,P,R,style);
    else:
      p_label(thetext,P,R,style);
    fi;
  enddef;
		
	endcode
endlayout